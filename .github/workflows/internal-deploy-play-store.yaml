name: Flutter CI/CD Workflow

on:
  push:
    branches:
      - develop
      - cicd-settings

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.9'
          channel: 'stable'


      - name: BaseURL File Settings
        run: |
          cd lib/core
          echo "${{ secrets.ENCODED_BASE_URL_FILE }}" | base64 --decode > base_url.dart
          ls

      - name: Secret File Settings
        run: |
          cd android
          echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > key.properties
          cd app
          echo "${{ secrets.MAEUMGAGYM_KEY }}" | base64 --decode > maeumgagym-key.jks
          echo "${{ secrets.SERVICE_ACCOUNT }}" | base64 --decode > serviceAccount.json
          ls
          pwd

      - name: Extract Version from README and Remove 'v'
        id: extract-version
        run: |
          version_name=$(sed -n '3p' README.md | sed 's/v//')
          echo "Extracted version name: $version_name"
          echo "::set-output name=VERSION_NAME::$version_name"

      - name: Update Version in pubspec.yaml
        run: |
          version_code=$(sed -n 's/version:.*+\([0-9]*\)/\1/p' pubspec.yaml)
          echo "Current version code: $version_code"

          new_version_code=$((version_code + 1))
          echo "New version code: $new_version_code"

          sed -i "s/version:.*+/version: ${steps.extract-version.outputs.VERSION_NAME}+$new_version_code/" pubspec.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.email "azxcv1768@gmail.com"
          git config --global user.name "HyunSu1768"
          git add pubspec.yaml
          git commit -m "Auto-update version to ${steps.extract-version.outputs.VERSION_NAME} with new version code"
          git push

      - name: Install dependencies
        run: flutter pub get

      - name: Setup Fastlane
        run: |
          sudo gem install fastlane

      - name: Deploy to Internal Track
        run: |
          cd android
          fastlane internal
          - name: Discord Webhook Action

      - name: Discord Webhook Action
        uses: sarisia/actions-status-discord@v1
        if: ${{ ! startsWith(github.event.head_commit.message, '!!') }}
        with:
          title: 🔥 Internal Track Deploy
          description: "# 내부트랙에 앱이 배포되었습니다.️"
          content: "<@&1153326597844238366>"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          color: FFFFFF
